plugins {
    id 'org.springframework.boot' version '3.3.2'
    id 'io.spring.dependency-management' version '1.1.6'
    id 'org.jetbrains.kotlin.jvm' version '1.9.24'
    id 'org.jetbrains.kotlin.plugin.spring' version '1.9.24'
    id 'com.google.cloud.tools.jib' version '3.4.3'
}

group = 'com.trankimtung.starter'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'com.fasterxml.jackson.module:jackson-module-kotlin'
    implementation 'org.jetbrains.kotlin:kotlin-reflect'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    runtimeOnly 'io.micrometer:micrometer-registry-prometheus'
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.jetbrains.kotlin:kotlin-test-junit5'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

kotlin {
    compilerOptions {
        freeCompilerArgs.addAll '-Xjsr305=strict'
    }
}

test {
    useJUnitPlatform()
}

jib {
    from {
        image = 'eclipse-temurin:21-alpine'
        platforms {
            platform {
                architecture = 'arm64'
                os = 'linux'
            }
            platform {
                architecture = 'amd64'
                os = 'linux'
            }
        }
    }
    to {
        image = 'ghcr.io/trankimtung/starter-spring'
        tags = [version.toString()]
    }
    container {
        ports = ['8080']
        labels = [
                'org.opencontainers.image.source': 'https://github.com/trankimtung/starter-spring',
                'org.opencontainers.image.licenses': 'MIT-0'
        ]
    }
    containerizingMode = 'packaged'
}
